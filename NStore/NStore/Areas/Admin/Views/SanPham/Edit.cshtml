@model NStore.Models.EF.SanPham

@{
    ViewBag.Title = "Sửa";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@section styles{
    <style>
        .add_img {
            background-image: linear-gradient(to top, #f9f9f9, #e3e3e3);
            width: 100px;
            height: 50px;
            border: 1px solid silver;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .custom-file-input::-webkit-file-upload-button {
            visibility: hidden;
        }

        .custom-file-input::before {
            content: 'Thêm ảnh';
            display: inline-block;
            border: none;
            border-radius: 3px;
            padding: 0 18px;
            margin: auto;
            outline: none;
            white-space: nowrap;
            -webkit-user-select: none;
            cursor: pointer;
            text-shadow: 1px 1px #fff;
            font-weight: 700;
            font-size: 10pt;
        }

        .pro-cate-img img {
            width: 100%;
            height: 100%;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .pro-cate-img button {
            position: absolute;
            transform: translateX(-60px);
            background-color: #555;
            color: white;
            font-size: 16px;
            padding: 12px 24px;
            border: none;
            cursor: pointer;
            border-radius: 5px;
            text-align: center;
        }
    </style>
}

@using (Html.BeginForm("Edit", "SanPham", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Sửa sản phẩm</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)
        @Html.HiddenFor(model => model.soLuongTon)

        <div class="form-group">
            @Html.LabelFor(model => model.tenSanPham, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tenSanPham, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tenSanPham, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idDanhMuc, "Danh mục", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idDanhMuc", null, htmlAttributes: new { @class = "form-select" })
                @Html.ValidationMessageFor(model => model.idDanhMuc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.img, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                (350x350)
                @Html.Hidden("oldImageName", Model.img)
                @Html.EditorFor(model => model.img, new { htmlAttributes = new { @class = "form-control", @type = "file" } })
                @Html.ValidationMessageFor(model => model.img, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mota, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mota, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mota, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.kichThuoc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.kichThuoc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.kichThuoc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mauSac, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mauSac, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mauSac, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.chatLieu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.chatLieu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.chatLieu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.xuatXu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.xuatXu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.xuatXu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.donGia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.donGia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.donGia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.giamGia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.giamGia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.giamGia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Cập nhật" class="btn btn-primary my-2 me-2" />
                @Html.ActionLink("Trở về", "Index")
            </div>
        </div>
    </div>
}

<label class="control-label">Danh sách ảnh sản phẩm</label>
<div>
    <div class="add_img my-2">
        <input type="file" id="imgload" class="custom-file-input" multiple="multiple">
    </div>
    <div class="imgshow  row" id="@Model.id">

    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $('document').ready(function () {
            //var imageId = $('.imgshow').attr('id');
            var productId = $('#id').val();
            showImg();
            //load ảnh sản phẩm
            function showImg() {
                $.ajax({
                    url: "/Admin/SanPham/LoadImgList",
                    method: "POST",
                    data: { productId },
                    success: function (result) {
                        var rs = $.map(result, function (item) {
                            return `<div class="my-2 pro-cate-img" id="${item.id}" style="width:200px;height:200px">
                                     <img src="/assets/images/products/${item.img}" />
                                           <button>
                                                <i class="fas fa-times"></i>
                                           </button>
                                 </div>`
                        })
                        const rss = rs.join('');
                        $('.imgshow').html(rss);
                        $('.pro-cate-img button').click(function (e) {
                            if (confirm("Bạn có chắc muốn xóa ảnh?") == true) {
                                $.ajax({
                                    url: "/Admin/SanPham/DeleteImg",
                                    method: "POST",
                                    data: { imageId: $(this).parent('div').attr('id') },
                                    success: function (result) {
                                        showImg();
                                    },
                                    error: function () {
                                        alert("Lỗi xóa ảnh sản phẩm")
                                    }
                                })
                            }
                        })
                    },
                    error: function () {
                        console.log("lỗi")
                    }
                })
            }
            //Thêm ảnh sản phẩm
            $("#imgload").change(function () {
                if (this.files.length > 0) {
                    var data = new FormData();
                    data.append("productId", productId);

                    for (var i = 0; i < this.files.length; i++) {
                        if (['image/jpeg', 'image/jpg', 'image/png', 'image/gif'].indexOf(this.files[0].type) == -1) {
                            alert("Lỗi: Ảnh không đúng định dạng");
                            return;
                        }
                        data.append("file" + i, this.files[i]);
                    }

                    $.ajax({
                        url: "/Admin/SanPham/AddImg",
                        method: "POST",
                        data: data,
                        contentType: false,
                        processData: false,
                        success: function (result) {
                            showImg();
                        },
                        error: function () {
                            alert("lỗi thêm ảnh sản phẩm")
                        }
                    })
                }
            });
        });

    </script>
}
